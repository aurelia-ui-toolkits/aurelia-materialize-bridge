{"version":3,"sources":["timepicker/timepicker.js"],"names":["bindable","customAttribute","bindingMode","inject","getBooleanFromAttributeValue","MdTimePicker","Element","defaultBindingMode","twoWay","element","bind","twelveHour","attached","options","afterDone","twelvehour","$","pickatime","detached","value","valueChanged","newValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;;8BAQKC,Y,WAFZF,OAAOG,OAAP,C,UACAL,gBAAgB,eAAhB,C,UAEED,U,UACAA,SAAS,EAACO,oBAAoBL,YAAYM,MAAjC,EAAT,C;AAED,8BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACD;;+BAEDC,I,mBAAO;AACL,eAAKC,UAAL,GAAkBP,6BAA6B,KAAKO,UAAlC,CAAlB;AACD,S;;+BAEDC,Q,uBAAW;AACT,cAAIC,UAAU;AACZC,uBAAW,KAAKA,SAAL,CAAeJ,IAAf,CAAoB,IAApB,CADC;AAEZK,wBAAY,KAAKJ;AAFL,WAAd;AAIAK,YAAE,KAAKP,OAAP,EAAgBQ,SAAhB,CAA0BJ,OAA1B;AACD,S;;+BAEDK,Q,uBAAW;AACTF,YAAE,KAAKP,OAAP,EAAgBQ,SAAhB,CAA0B,QAA1B;AACD,S;;+BAEDH,S,wBAAY;AACV,eAAKK,KAAL,GAAa,KAAKV,OAAL,CAAaU,KAA1B;AACD,S;;+BAEDC,Y,yBAAaC,Q,EAAU;AACrB,eAAKZ,OAAL,CAAaU,KAAb,GAAqBE,QAArB;AACD,S;;;;;;iBA7BwB,K","file":"../../../timepicker/timepicker.js","sourcesContent":["import {bindable, customAttribute} from 'aurelia-templating';\r\nimport {bindingMode} from 'aurelia-binding';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {getBooleanFromAttributeValue} from '../common/attributes';\r\n// import {fireEvent} from '../common/events';\r\n\r\n// Materialize doesn't present the full api.\r\n// See here for full api: https://github.com/weareoutman/clockpicker\r\n\r\n@inject(Element)\r\n@customAttribute('md-timepicker')\r\nexport class MdTimePicker {\r\n  @bindable() twelveHour = false;\r\n  @bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  bind() {\r\n    this.twelveHour = getBooleanFromAttributeValue(this.twelveHour);\r\n  }\r\n\r\n  attached() {\r\n    let options = {\r\n      afterDone: this.afterDone.bind(this),\r\n      twelvehour: this.twelveHour\r\n    };\r\n    $(this.element).pickatime(options);\r\n  }\r\n\r\n  detached() {\r\n    $(this.element).pickatime('remove');\r\n  }\r\n\r\n  afterDone() {\r\n    this.value = this.element.value;\r\n  }\r\n\r\n  valueChanged(newValue) {\r\n    this.element.value = newValue;\r\n  }\r\n}\r\n"]}