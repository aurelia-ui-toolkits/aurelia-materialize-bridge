{"version":3,"sources":["validation/validationRenderer.js"],"names":["MaterializeFormValidationRenderer","className","classNameFirst","render","instruction","unrender","result","elements","element","remove","underlineInput","add","input","validationContainer","tagName","querySelector","inputField","closest","parentElement","querySelectorAll","length","classList","valid","label","removeAttribute","target","hasAttribute","addMessage","getAttribute","parentNode","removeMessage","message","document","createElement","id","textContent","style","opacity","appendChild","nextSibling","window","getComputedStyle","removeChild"],"mappings":"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","file":"../../../validation/validationRenderer.js","sourcesContent":["export class MaterializeFormValidationRenderer {\r\n\r\n  className = 'md-input-validation';\r\n  classNameFirst = 'md-input-validation-first';\r\n\r\n  render(instruction) {\r\n    for (let { result, elements } of instruction.unrender) {\r\n      for (let element of elements) {\r\n        this.remove(element, result);\r\n        this.underlineInput(element, false);\r\n      }\r\n    }\r\n    for (let { result, elements } of instruction.render) {\r\n      for (let element of elements) {\r\n        this.add(element, result);\r\n        this.underlineInput(element, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  underlineInput(element, render) {\r\n    let input;\r\n    let validationContainer;\r\n    switch (element.tagName) {\r\n      case 'MD-INPUT': {\r\n        input = element.querySelector('input') || element.querySelector('textarea');\r\n        validationContainer = element;\r\n        break;\r\n      }\r\n      case 'SELECT': {\r\n        const inputField = element.closest('.input-field');\r\n        if (inputField) {\r\n          input = inputField.querySelector('input');\r\n          validationContainer = inputField;\r\n        }\r\n        break;\r\n      }\r\n      case 'INPUT': {\r\n        input = element;\r\n        validationContainer = element.parentElement;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    if (input) {\r\n      if (render) {\r\n        if (validationContainer.querySelectorAll('.' + this.className).length === 0) {\r\n          input.classList.remove('invalid');\r\n          input.classList.add('valid');\r\n        } else {\r\n          input.classList.remove('valid');\r\n          input.classList.add('invalid');\r\n        }\r\n      } else {\r\n        input.classList.remove('valid');\r\n        input.classList.remove('invalid');\r\n      }\r\n    }\r\n  }\r\n\r\n  add(element, result) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n    switch (element.tagName) {\r\n      case 'MD-INPUT': {\r\n        let label = element.querySelector('label');\r\n        let input = element.querySelector('input') || element.querySelector('textarea');\r\n        if (label) {\r\n          label.removeAttribute('data-error');\r\n        }\r\n        if (input) {\r\n          result.target = input;\r\n          if (input.hasAttribute('data-show-errortext')) {\r\n            this.addMessage(element, result);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'SELECT': {\r\n        const inputField = element.closest('.input-field');\r\n        if (!inputField) {\r\n          return;\r\n        }\r\n        let input = inputField.querySelector('input');\r\n        if (input) {\r\n          result.target = input;\r\n          if (!(input.hasAttribute('data-show-errortext') &&\r\n                input.getAttribute('data-show-errortext') === 'false')) {\r\n            this.addMessage(inputField, result);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'INPUT' : {\r\n        if (element.hasAttribute('md-datepicker')) {\r\n          if (!(element.hasAttribute('data-show-errortext') &&\r\n              element.getAttribute('data-show-errortext') === 'false')) {\r\n            this.addMessage(element.parentNode, result);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  remove(element, result) {\r\n    if (result.valid) {\r\n      return;\r\n    }\r\n    switch (element.tagName) {\r\n      case 'MD-INPUT': {\r\n        this.removeMessage(element, result);\r\n        break;\r\n      }\r\n      case 'SELECT': {\r\n        const inputField = element.closest('.input-field');\r\n        if (!inputField) {\r\n          return;\r\n        }\r\n\r\n        this.removeMessage(inputField, result);\r\n        break;\r\n      }\r\n      case 'INPUT' : {\r\n        if (element.hasAttribute('md-datepicker')) {\r\n          this.removeMessage(element.parentNode, result);\r\n        }\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  addMessage(element, result) {\r\n    let message = document.createElement('div');\r\n    message.id = `md-input-validation-${result.id}`;\r\n    message.textContent = result.message;\r\n    message.className = this.className;\r\n    if (element.querySelectorAll('.' + this.className).length === 0) {\r\n      message.className += ' ' + this.classNameFirst;\r\n    }\r\n    message.style.opacity = 0;\r\n    element.appendChild(message, element.nextSibling);\r\n    window.getComputedStyle(message).opacity;\r\n    message.style.opacity = 1;\r\n  }\r\n\r\n  removeMessage(element, result) {\r\n    let message = element.querySelector(`#md-input-validation-${result.id}`);\r\n    if (message) {\r\n      element.removeChild(message);\r\n    }\r\n  }\r\n\r\n}\r\n"]}