{"version":3,"sources":["datepicker/datepicker.js"],"names":["bindable","customAttribute","bindingMode","TaskQueue","inject","getLogger","getBooleanFromAttributeValue","DatePickerDefaultParser","fireEvent","MdDatePicker","Element","defaultBindingMode","twoWay","oneTime","element","taskQueue","defaultParser","calendarIcon","log","parsers","push","onCalendarIconClick","bind","selectMonths","selectYears","parseInt","classList","add","options","onClose","$","document","activeElement","blur","i18n","Object","assign","container","picker","pickadate","on","value","set","editable","e","keyCode","parseDate","val","updateValue","closeDatePicker","openDatePicker","showIcon","createElement","textContent","parentNode","insertBefore","nextSibling","iconClass","setErrorTextAttribute","length","parser","canParse","parsedDate","parse","detached","remove","off","stop","selected","get","obj","event","stopPropagation","valueChanged","newValue","max","debug","showErrortextChanged","showErrortext","setAttribute"],"mappings":"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","file":"../../../datepicker/datepicker.js","sourcesContent":["import {bindable, customAttribute} from 'aurelia-templating';\r\nimport {bindingMode} from 'aurelia-binding';\r\nimport {TaskQueue} from 'aurelia-task-queue';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {getLogger} from 'aurelia-logging';\r\nimport {getBooleanFromAttributeValue} from '../common/attributes';\r\nimport {DatePickerDefaultParser} from './datepicker-default-parser';\r\nimport {fireEvent} from '../common/events';\r\n\r\n@inject(Element, TaskQueue, DatePickerDefaultParser)\r\n@customAttribute('md-datepicker')\r\nexport class MdDatePicker {\r\n  @bindable() container;\r\n  @bindable() translation;\r\n  @bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\n  @bindable({defaultBindingMode: bindingMode.twoWay}) parsers = [];\r\n  @bindable({defaultBindingMode: bindingMode.oneTime}) selectMonths = true;\r\n  @bindable({defaultBindingMode: bindingMode.oneTime}) selectYears = 15;\r\n  @bindable({defaultBindingMode: bindingMode.oneTime}) options = {};\r\n  @bindable() showErrortext = true;\r\n  calendarIcon = null;\r\n\r\n  constructor(element, taskQueue, defaultParser) {\r\n    this.element = element;\r\n    this.log = getLogger('md-datepicker');\r\n    this.taskQueue = taskQueue;\r\n    this.parsers.push(defaultParser);\r\n    this.onCalendarIconClick = this.onCalendarIconClick.bind(this);\r\n  }\r\n\r\n  bind() {\r\n    this.selectMonths = getBooleanFromAttributeValue(this.selectMonths);\r\n    this.selectYears = parseInt(this.selectYears, 10);\r\n    this.element.classList.add('date-picker');\r\n\r\n    let options = {\r\n      selectMonths: this.selectMonths,\r\n      selectYears: this.selectYears,\r\n      onClose: function() {\r\n        // see https://github.com/Dogfalo/materialize/issues/2067\r\n        // and: https://github.com/amsul/pickadate.js/issues/160\r\n        $(document.activeElement).blur();\r\n        // $(this.element).blur();\r\n      }\r\n    };\r\n    let i18n = {};\r\n    // let i18n = {\r\n    //   selectMonths: true, // Creates a dropdown to control month\r\n    //   selectYears: 15, // Creates a dropdown of 15 years to control year\r\n    //   monthsFull: [ 'Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember' ],\r\n    //   monthsShort: [ 'Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez' ],\r\n    //   weekdaysFull: [ 'Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag' ],\r\n    //   weekdaysShort: [ 'So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa' ],\r\n    //   today: 'Heute',\r\n    //   clear: 'Löschen',\r\n    //   close: 'Schließen',\r\n    //   firstDay: 1,\r\n    //   format: 'dddd, dd. mmmm yyyy',\r\n    //   formatSubmit: 'yyyy/mm/dd'\r\n    // };\r\n    Object.assign(options, i18n);\r\n\r\n    if (this.options) {\r\n      Object.assign(options, this.options);\r\n      //merge callback methods if there is a hook in the advanced options\r\n      if (this.options.onClose) {\r\n        options.onClose = () => {\r\n          this.options.onClose();\r\n          $(document.activeElement).blur();\r\n        };\r\n      }\r\n    }\r\n    if (this.container) {\r\n      options.container = this.container;\r\n    }\r\n    this.picker = $(this.element).pickadate(options).pickadate('picker');\r\n    this.picker.on({\r\n      'close': this.onClose.bind(this)\r\n      // 'set': this.onSet.bind(this)\r\n    });\r\n\r\n    if (this.value) {\r\n      this.picker.set('select', this.value);\r\n    }\r\n    if (this.options && this.options.editable) {\r\n      $(this.element).on('keydown', (e)=> {\r\n        if (e.keyCode === 13 || e.keyCode === 9) {\r\n          if (this.parseDate($(this.element).val())) {\r\n            this.updateValue();\r\n            this.closeDatePicker();\r\n          } else {\r\n            this.openDatePicker();\r\n          }\r\n        } else {\r\n          this.value = null;\r\n        }\r\n      });\r\n    } else {\r\n      $(this.element).on('focusin', () => {\r\n        this.openDatePicker();\r\n      });\r\n    }\r\n    if (this.options.showIcon) {\r\n      this.element.classList.add('left');\r\n      this.calendarIcon = document.createElement('i');\r\n      this.calendarIcon.classList.add('right');\r\n      this.calendarIcon.classList.add('material-icons');\r\n      this.calendarIcon.textContent = 'today';\r\n      this.element.parentNode.insertBefore(this.calendarIcon, this.element.nextSibling);\r\n      $(this.calendarIcon).on('click', this.onCalendarIconClick);\r\n\r\n      options.iconClass = options.iconClass || 'std-icon-fixup';\r\n      this.calendarIcon.classList.add(options.iconClass);\r\n    }\r\n\r\n    this.setErrorTextAttribute();\r\n  }\r\n\r\n  parseDate(value) {\r\n    if (this.parsers && this.parsers.length && this.parsers.length > 0) {\r\n      for (const parser of this.parsers) {\r\n        if (parser.canParse(value)) {\r\n          const parsedDate = parser.parse(value);\r\n          if (parsedDate !== null) {\r\n            this.picker.set('select', parsedDate);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  detached() {\r\n    if (this.options.showIcon) {\r\n      this.element.classList.remove('left');\r\n      $(this.calendarIcon).off('click', this.onCalendarIconClick);\r\n      $(this.calendarIcon).remove();\r\n      this.calendarIcon = null;\r\n    }\r\n    if (this.picker) {\r\n      this.picker.stop();\r\n    }\r\n  }\r\n\r\n  openDatePicker() {\r\n    $(this.element).pickadate('open');\r\n  }\r\n\r\n  closeDatePicker() {\r\n    $(this.element).pickadate('close');\r\n  }\r\n\r\n  updateValue() {\r\n    let selected = this.picker.get('select');\r\n    this.value = selected ? selected.obj : null;\r\n  }\r\n\r\n  onClose() {\r\n    this.updateValue();\r\n    fireEvent(this.element, 'blur');\r\n  }\r\n\r\n  onCalendarIconClick(event) {\r\n    event.stopPropagation();\r\n    this.openDatePicker();\r\n  }\r\n\r\n  // onSet(value) {\r\n  //   //handle this ourselves since Dogfalo removed this functionality from the original plugin\r\n  //   if (this.options && this.options.closeOnSelect && value.select) {\r\n  //     this.value = value.select;\r\n  //     this.picker.close();\r\n  //   }\r\n  //   // this.value = new Date(value.select);\r\n  // }\r\n\r\n  valueChanged(newValue) {\r\n    if (this.options.max && newValue > this.options.max) {\r\n      this.value = this.options.max;\r\n    }\r\n    this.log.debug('selectedChanged', this.value);\r\n    // this.taskQueue.queueTask(() => {\r\n    this.picker.set('select', this.value);\r\n    // });\r\n  }\r\n\r\n  showErrortextChanged() {\r\n    this.setErrorTextAttribute();\r\n  }\r\n\r\n  setErrorTextAttribute() {\r\n    const element = this.element;\r\n    if (!element) return;\r\n    this.log.debug('showErrortextChanged: ' + this.showErrortext);\r\n    element.setAttribute('data-show-errortext', getBooleanFromAttributeValue(this.showErrortext));\r\n  }\r\n}\r\n"]}