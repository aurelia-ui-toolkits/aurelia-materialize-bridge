{"version":3,"sources":["radio/radio.js"],"names":["bindable","customElement","bindingMode","inject","AttributeManager","getBooleanFromAttributeValue","MdRadio","Element","defaultBindingMode","twoWay","element","controlId","id","attached","attributeManager","radio","mdGap","addClasses","mdDisabled","disabled","mdReadonly","detached","removeClasses","mdDisabledChanged","newValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;;yBAIIC,O,WAFZL,cAAc,UAAd,C,UACAE,OAAOI,OAAP,C,UAGEP,SAAS;AACRQ,4BAAoBN,YAAYO;AADxB,OAAT,C,UAGAT,U,UACAA,U,UACAA,U,UACAA,U,UACAA,U,UACAA,U;AAED,yBAAYU,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,SAAL,iBAA6BL,QAAQM,EAAR,EAA7B;AAED;;0BAEDC,Q,uBAAW;AACT,eAAKC,gBAAL,GAAwB,IAAIV,gBAAJ,CAAqB,KAAKW,KAA1B,CAAxB;AACA,cAAIV,6BAA6B,KAAKW,KAAlC,CAAJ,EAA8C;AAC5C,iBAAKF,gBAAL,CAAsBG,UAAtB,CAAiC,UAAjC;AACD;AACD,cAAIZ,6BAA6B,KAAKa,UAAlC,CAAJ,EAAmD;AACjD,iBAAKH,KAAL,CAAWI,QAAX,GAAsB,IAAtB;AACD;AACD,eAAKC,UAAL,GAAkBf,6BAA6B,KAAKe,UAAlC,CAAlB;AAGD,S;;0BAEDC,Q,uBAAW;AACT,eAAKP,gBAAL,CAAsBQ,aAAtB,CAAoC,CAAC,UAAD,EAAa,UAAb,CAApC;AAED,S;;0BAYDC,iB,8BAAkBC,Q,EAAU;AAC1B,cAAI,KAAKT,KAAT,EAAgB;AACd,iBAAKA,KAAL,CAAWI,QAAX,GAAsB,CAAC,CAACK,QAAxB;AACD;AACF,S;;;mBAjDMZ,E,GAAK,C;;;;;;iBAIa,K;;;;;iBACA,K;;;;;iBACL,K;;;;;;;;iBAEC,E;;;;;iBACC,E","file":"../../../radio/radio.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customElement('md-radio')\n@inject(Element)\nexport class MdRadio {\n  static id = 0;\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) mdChecked;\n  @bindable() mdDisabled = false;\n  @bindable() mdReadonly = false;\n  @bindable() mdGap = false;\n  @bindable() mdModel;\n  @bindable() mdName = '';\n  @bindable() mdValue = '';\n\n  constructor(element) {\n    this.element = element;\n    this.controlId = `md-radio-${MdRadio.id++}`;\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  attached() {\n    this.attributeManager = new AttributeManager(this.radio);\n    if (getBooleanFromAttributeValue(this.mdGap)) {\n      this.attributeManager.addClasses('with-gap');\n    }\n    if (getBooleanFromAttributeValue(this.mdDisabled)) {\n      this.radio.disabled = true;\n    }\n    this.mdReadonly = getBooleanFromAttributeValue(this.mdReadonly);\n    // this.radio.checked = getBooleanFromAttributeValue(this.mdChecked);\n    // this.radio.addEventListener('change', this.handleChange);\n  }\n\n  detached() {\n    this.attributeManager.removeClasses(['with-gap', 'disabled']);\n    // this.radio.removeEventListener('change', this.handleChange);\n  }\n\n  // handleChange() {\n  //   this.mdChecked = this.radio.checked;\n  // }\n\n  // mdCheckedChanged(newValue) {\n  //   if (this.radio) {\n  //     this.radio.checked = !!newValue;\n  //   }\n  // }\n\n  mdDisabledChanged(newValue) {\n    if (this.radio) {\n      this.radio.disabled = !!newValue;\n    }\n  }\n}\n"]}