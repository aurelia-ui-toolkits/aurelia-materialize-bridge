{"version":3,"sources":["slider/slider.js"],"names":["bindable","customElement","bindingMode","inject","getBooleanFromAttributeValue","getLogger","MdSlider","Element","defaultBindingMode","oneTime","element","log","attached","mdFillContainer","classList","add","refresh","pause","$","slider","start","next","prev","options","height","parseInt","mdHeight","indicators","mdIndicators","interval","mdInterval","transition","mdTransition","debug","mdIndicatorsChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACAC,e,mBAAAA,S;;;0BAIIC,Q,WAFZL,cAAc,WAAd,C,UACAE,OAAOI,OAAP,C,UAEEP,SAAS,EAAEQ,oBAAoBN,YAAYO,OAAlC,EAAT,C,UACAT,SAAS,EAAEQ,oBAAoBN,YAAYO,OAAlC,EAAT,C,UACAT,U,UACAA,SAAS,EAAEQ,oBAAoBN,YAAYO,OAAlC,EAAT,C,UACAT,SAAS,EAAEQ,oBAAoBN,YAAYO,OAAlC,EAAT,C;AAED,0BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,GAAL,GAAWN,UAAU,WAAV,CAAX;AACD;;2BAEDO,Q,uBAAW;AACT,cAAIR,6BAA6B,KAAKS,eAAlC,CAAJ,EAAwD;AACtD,iBAAKH,OAAL,CAAaI,SAAb,CAAuBC,GAAvB,CAA2B,YAA3B;AACD;AACD,eAAKC,OAAL;AACD,S;;2BAEDC,K,oBAAQ;AACNC,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,OAAvB;AACD,S;;2BAEDC,K,oBAAQ;AACNF,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,OAAvB;AACD,S;;2BAEDE,I,mBAAO;AACLH,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,MAAvB;AACD,S;;2BAEDG,I,mBAAO;AACLJ,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuB,MAAvB;AACD,S;;2BAEDH,O,sBAAU;AACR,cAAIO,UAAU;AACZC,oBAAQC,SAAS,KAAKC,QAAd,EAAwB,EAAxB,CADI;AAEZC,wBAAYvB,6BAA6B,KAAKwB,YAAlC,CAFA;AAGZC,sBAAUJ,SAAS,KAAKK,UAAd,EAA0B,EAA1B,CAHE;AAIZC,wBAAYN,SAAS,KAAKO,YAAd,EAA4B,EAA5B;AAJA,WAAd;AAMA,eAAKrB,GAAL,CAASsB,KAAT,CAAe,4BAAf,EAA6CV,OAA7C;AACAL,YAAE,KAAKR,OAAP,EAAgBS,MAAhB,CAAuBI,OAAvB;AACD,S;;2BAEDW,mB,kCAAsB;AACpB,eAAKlB,OAAL;AACD,S;;;;;;iBA/CwE,K;;;;;iBACP,G;;;;;iBACvC,I;;;;;iBACyC,I;;;;;iBACE,G","file":"../../../slider/slider.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { getLogger } from 'aurelia-logging';\r\n\r\n@customElement('md-slider')\r\n@inject(Element)\r\nexport class MdSlider {\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdFillContainer = false;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdHeight = 400;\r\n  @bindable() mdIndicators = true;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdInterval = 6000;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) mdTransition = 500;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.log = getLogger('md-slider');\r\n  }\r\n\r\n  attached() {\r\n    if (getBooleanFromAttributeValue(this.mdFillContainer)) {\r\n      this.element.classList.add('fullscreen');\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  pause() {\r\n    $(this.element).slider('pause');\r\n  }\r\n\r\n  start() {\r\n    $(this.element).slider('start');\r\n  }\r\n\r\n  next() {\r\n    $(this.element).slider('next');\r\n  }\r\n\r\n  prev() {\r\n    $(this.element).slider('prev');\r\n  }\r\n\r\n  refresh() {\r\n    let options = {\r\n      height: parseInt(this.mdHeight, 10),\r\n      indicators: getBooleanFromAttributeValue(this.mdIndicators),\r\n      interval: parseInt(this.mdInterval, 10),\r\n      transition: parseInt(this.mdTransition, 10)\r\n    };\r\n    this.log.debug('refreshing slider, params:', options);\r\n    $(this.element).slider(options);\r\n  }\r\n\r\n  mdIndicatorsChanged() {\r\n    this.refresh();\r\n  }\r\n\r\n  // commented since that leads to strange effects\r\n  // mdIntervalChanged() {\r\n  //   this.refresh();\r\n  // }\r\n  //\r\n  // mdTransitionChanged() {\r\n  //   this.refresh();\r\n  // }\r\n}\r\n"]}