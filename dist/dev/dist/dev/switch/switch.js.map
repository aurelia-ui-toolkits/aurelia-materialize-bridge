{"version":3,"sources":["switch/switch.js"],"names":["bindable","customElement","bindingMode","inject","getBooleanFromAttributeValue","fireEvent","MdSwitch","Element","defaultBindingMode","twoWay","element","handleChange","bind","attached","checkbox","checked","mdChecked","mdDisabled","disabled","addEventListener","mdReadonly","detached","removeEventListener","blur","mdCheckedChanged","newValue","mdDisabledChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACDC,e,iBAAAA,S;;;0BAIKC,Q,WAFZL,cAAc,WAAd,C,UACAE,OAAOI,OAAP,C,UAEEP,SAAS;AACRQ,4BAAoBN,YAAYO;AADxB,OAAT,C,UAGAT,U,UACAA,U,UACAA,U,UACAA,U;AAED,0BAAYU,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;2BAEDC,Q,uBAAW;AACT,eAAKC,QAAL,CAAcC,OAAd,GAAwBX,6BAA6B,KAAKY,SAAlC,CAAxB;AACA,cAAIZ,6BAA6B,KAAKa,UAAlC,CAAJ,EAAmD;AACjD,iBAAKH,QAAL,CAAcI,QAAd,GAAyB,IAAzB;AACD;AACD,eAAKJ,QAAL,CAAcK,gBAAd,CAA+B,QAA/B,EAAyC,KAAKR,YAA9C;AACA,eAAKS,UAAL,GAAkBhB,6BAA6B,KAAKgB,UAAlC,CAAlB;AACD,S;;2BAEDC,Q,uBAAW;AACT,eAAKP,QAAL,CAAcQ,mBAAd,CAAkC,QAAlC,EAA4C,KAAKX,YAAjD;AACD,S;;2BAEDA,Y,2BAAe;AACb,eAAKK,SAAL,GAAiB,KAAKF,QAAL,CAAcC,OAA/B;AACAV,oBAAU,KAAKK,OAAf,EAAwB,MAAxB;AACD,S;;2BAEDa,I,mBAAO;AACLlB,oBAAU,KAAKK,OAAf,EAAwB,MAAxB;AACD,S;;2BAEDc,gB,6BAAiBC,Q,EAAU;AACzB,cAAI,KAAKX,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAcC,OAAd,GAAwB,CAAC,CAACU,QAA1B;AACD;AACF,S;;2BAEDC,iB,8BAAkBD,Q,EAAU;AAC1B,cAAI,KAAKX,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAcI,QAAd,GAAyB,CAAC,CAACO,QAA3B;AACD;AACF,S;;;;;;;;;;;;iBAzCwB,K;;;;;iBACA,K;;;;;iBACD,I","file":"../../../switch/switch.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { bindingMode } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport {fireEvent} from '../common/events';\n\n@customElement('md-switch')\n@inject(Element)\nexport class MdSwitch {\n  @bindable({\n    defaultBindingMode: bindingMode.twoWay\n  }) mdChecked;\n  @bindable() mdDisabled;\n  @bindable() mdReadonly = false;\n  @bindable() mdLabelOff = 'Off';\n  @bindable() mdLabelOn = 'On';\n\n  constructor(element) {\n    this.element = element;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  attached() {\n    this.checkbox.checked = getBooleanFromAttributeValue(this.mdChecked);\n    if (getBooleanFromAttributeValue(this.mdDisabled)) {\n      this.checkbox.disabled = true;\n    }\n    this.checkbox.addEventListener('change', this.handleChange);\n    this.mdReadonly = getBooleanFromAttributeValue(this.mdReadonly);\n  }\n\n  detached() {\n    this.checkbox.removeEventListener('change', this.handleChange);\n  }\n\n  handleChange() {\n    this.mdChecked = this.checkbox.checked;\n    fireEvent(this.element, 'blur');\n  }\n\n  blur() {\n    fireEvent(this.element, 'blur');\n  }\n\n  mdCheckedChanged(newValue) {\n    if (this.checkbox) {\n      this.checkbox.checked = !!newValue;\n    }\n  }\n\n  mdDisabledChanged(newValue) {\n    if (this.checkbox) {\n      this.checkbox.disabled = !!newValue;\n    }\n  }\n}\n"]}