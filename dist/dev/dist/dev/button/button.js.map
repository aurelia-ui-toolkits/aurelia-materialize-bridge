{"version":3,"sources":["button/button.js"],"names":["bindable","customAttribute","inject","AttributeManager","getBooleanFromAttributeValue","MdButton","Element","element","attributeManager","attached","classes","flat","push","floating","large","length","disabled","pulse","addClasses","detached","removeClasses","disabledChanged","newValue","flatChanged","pulseChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;;0BAIIC,Q,WAFZJ,gBAAgB,WAAhB,C,UACAC,OAAOI,OAAP,C,UAEEN,U,UACAA,U,UACAA,U,UACAA,U,UACAA,U;AAED,0BAAYO,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKC,gBAAL,GAAwB,IAAIL,gBAAJ,CAAqBI,OAArB,CAAxB;AACD;;2BAEDE,Q,uBAAW;AACT,cAAIC,UAAU,EAAd;;AAEA,cAAIN,6BAA6B,KAAKO,IAAlC,CAAJ,EAA6C;AAC3CD,oBAAQE,IAAR,CAAa,UAAb;AACD;AACD,cAAIR,6BAA6B,KAAKS,QAAlC,CAAJ,EAAiD;AAC/CH,oBAAQE,IAAR,CAAa,cAAb;AACD;AACD,cAAIR,6BAA6B,KAAKU,KAAlC,CAAJ,EAA8C;AAC5CJ,oBAAQE,IAAR,CAAa,WAAb;AACD;;AAED,cAAIF,QAAQK,MAAR,KAAmB,CAAvB,EAA0B;AACxBL,oBAAQE,IAAR,CAAa,KAAb;AACD;;AAED,cAAIR,6BAA6B,KAAKY,QAAlC,CAAJ,EAAiD;AAC/CN,oBAAQE,IAAR,CAAa,UAAb;AACD;;AAED,cAAI,CAACR,6BAA6B,KAAKO,IAAlC,CAAL,EAA8C;AAC5CD,oBAAQE,IAAR,CAAa,QAAb;AACD;AACD,cAAIR,6BAA6B,KAAKa,KAAlC,CAAJ,EAA8C;AAC5CP,oBAAQE,IAAR,CAAa,OAAb;AACD;AACD,eAAKJ,gBAAL,CAAsBU,UAAtB,CAAiCR,OAAjC;AACD,S;;2BAEDS,Q,uBAAW;AACT,eAAKX,gBAAL,CAAsBY,aAAtB,CAAoC,CAAC,QAAD,EAAW,KAAX,EAAkB,UAAlB,EAA8B,WAA9B,EAA2C,UAA3C,EAAuD,OAAvD,CAApC;AACD,S;;2BAEDC,e,4BAAgBC,Q,EAAU;AACxB,cAAIlB,6BAA6BkB,QAA7B,CAAJ,EAA4C;AAC1C,iBAAKd,gBAAL,CAAsBU,UAAtB,CAAiC,UAAjC;AACD,WAFD,MAEO;AACL,iBAAKV,gBAAL,CAAsBY,aAAtB,CAAoC,UAApC;AACD;AACF,S;;2BAEDG,W,wBAAYD,Q,EAAU;AACpB,cAAIlB,6BAA6BkB,QAA7B,CAAJ,EAA4C;AAC1C,iBAAKd,gBAAL,CAAsBY,aAAtB,CAAoC,CAAC,KAAD,EAAQ,QAAR,CAApC;AACA,iBAAKZ,gBAAL,CAAsBU,UAAtB,CAAiC,UAAjC;AACD,WAHD,MAGO;AACL,iBAAKV,gBAAL,CAAsBY,aAAtB,CAAoC,UAApC;AACA,iBAAKZ,gBAAL,CAAsBU,UAAtB,CAAiC,CAAC,KAAD,EAAQ,QAAR,CAAjC;AACD;AACF,S;;2BAEDM,Y,yBAAaF,Q,EAAU;AACrB,cAAIlB,6BAA6BkB,QAA7B,CAAJ,EAA4C;AAC1C,iBAAKd,gBAAL,CAAsBU,UAAtB,CAAiC,OAAjC;AACD,WAFD,MAEO;AACL,iBAAKV,gBAAL,CAAsBY,aAAtB,CAAoC,OAApC;AACD;AACF,S;;;;;;iBApEsB,K;;;;;iBACJ,K;;;;;iBACI,K;;;;;iBACH,K;;;;;iBACA,K","file":"../../../button/button.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\n\r\n@customAttribute('md-button')\r\n@inject(Element)\r\nexport class MdButton {\r\n  @bindable() disabled = false;\r\n  @bindable() flat = false;\r\n  @bindable() floating = false;\r\n  @bindable() large = false;\r\n  @bindable() pulse = false;\r\n\r\n  constructor(element) {\r\n    this.attributeManager = new AttributeManager(element);\r\n  }\r\n\r\n  attached() {\r\n    let classes = [];\r\n\r\n    if (getBooleanFromAttributeValue(this.flat)) {\r\n      classes.push('btn-flat');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.floating)) {\r\n      classes.push('btn-floating');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.large)) {\r\n      classes.push('btn-large');\r\n    }\r\n\r\n    if (classes.length === 0) {\r\n      classes.push('btn');\r\n    }\r\n\r\n    if (getBooleanFromAttributeValue(this.disabled)) {\r\n      classes.push('disabled');\r\n    }\r\n\r\n    if (!getBooleanFromAttributeValue(this.flat)) {\r\n      classes.push('accent');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.pulse)) {\r\n      classes.push('pulse');\r\n    }\r\n    this.attributeManager.addClasses(classes);\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeClasses(['accent', 'btn', 'btn-flat', 'btn-large', 'disabled', 'pulse']);\r\n  }\r\n\r\n  disabledChanged(newValue) {\r\n    if (getBooleanFromAttributeValue(newValue)) {\r\n      this.attributeManager.addClasses('disabled');\r\n    } else {\r\n      this.attributeManager.removeClasses('disabled');\r\n    }\r\n  }\r\n\r\n  flatChanged(newValue) {\r\n    if (getBooleanFromAttributeValue(newValue)) {\r\n      this.attributeManager.removeClasses(['btn', 'accent']);\r\n      this.attributeManager.addClasses('btn-flat');\r\n    } else {\r\n      this.attributeManager.removeClasses('btn-flat');\r\n      this.attributeManager.addClasses(['btn', 'accent']);\r\n    }\r\n  }\r\n\r\n  pulseChanged(newValue) {\r\n    if (getBooleanFromAttributeValue(newValue)) {\r\n      this.attributeManager.addClasses('pulse');\r\n    } else {\r\n      this.attributeManager.removeClasses('pulse');\r\n    }\r\n  }\r\n}\r\n"]}