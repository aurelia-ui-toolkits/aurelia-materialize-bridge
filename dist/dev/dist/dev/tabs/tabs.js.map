{"version":3,"sources":["tabs/tabs.js"],"names":["bindable","customAttribute","inject","TaskQueue","fireMaterializeEvent","AttributeManager","getBooleanFromAttributeValue","MdTabs","Element","element","taskQueue","fireTabSelectedEvent","bind","attributeManager","tabAttributeManagers","attached","addClasses","children","querySelectorAll","forEach","call","setter","child","push","self","$","tabs","onShow","jQueryElement","swipeable","responsiveThreshold","childAnchors","a","addEventListener","detached","removeClasses","removeEventListener","refresh","queueTask","hrefs","each","i","tab","parent","addClass","attr","selectedTab","index","hide","window","trigger","fixedChanged","newValue","transparentChanged","e","href","target","getAttribute","selectTab","id","classList","contains","Infinity"],"mappings":"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","file":"../../../tabs/tabs.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { TaskQueue } from 'aurelia-task-queue';\r\nimport { fireMaterializeEvent } from '../common/events';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport {getBooleanFromAttributeValue} from '../common/attributes';\r\n\r\n@customAttribute('md-tabs')\r\n@inject(Element, TaskQueue)\r\nexport class MdTabs {\r\n  @bindable() fixed = false;\r\n  @bindable() onShow = null;\r\n  @bindable() responsiveThreshold = Infinity;\r\n  @bindable() swipeable = false;\r\n  @bindable() transparent = false;\r\n\r\n  constructor(element, taskQueue) {\r\n    this.element = element;\r\n    this.taskQueue = taskQueue;\r\n    this.fireTabSelectedEvent = this.fireTabSelectedEvent.bind(this);\r\n    this.attributeManager = new AttributeManager(this.element);\r\n    this.tabAttributeManagers = [];\r\n  }\r\n\r\n  attached() {\r\n    this.attributeManager.addClasses('tabs');\r\n\r\n    let children = this.element.querySelectorAll('li');\r\n    [].forEach.call(children, child => {\r\n      let setter = new AttributeManager(child);\r\n      setter.addClasses(['tab', 'primary-text']);\r\n      this.tabAttributeManagers.push(setter);\r\n    });\r\n\r\n    const self = this;\r\n    $(this.element).tabs({\r\n      onShow: function(jQueryElement) {\r\n        if (self.onShow) {\r\n          self.onShow({ element: jQueryElement});\r\n        }\r\n      },\r\n      swipeable: getBooleanFromAttributeValue(this.swipeable),\r\n      responsiveThreshold: this.responsiveThreshold\r\n    });\r\n    let childAnchors = this.element.querySelectorAll('li a');\r\n    [].forEach.call(childAnchors, a => {\r\n      a.addEventListener('click', this.fireTabSelectedEvent);\r\n    });\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeClasses('tabs');\r\n\r\n    // no destroy handler in tabs\r\n\r\n    this.tabAttributeManagers.forEach(setter => {\r\n      setter.removeClasses('tab');\r\n    });\r\n    this.tabAttributeManagers = [];\r\n    let childAnchors = this.element.querySelectorAll('li a');\r\n    [].forEach.call(childAnchors, a => {\r\n      a.removeEventListener('click', this.fireTabSelectedEvent);\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.taskQueue.queueTask(() => {\r\n      let hrefs = [];\r\n      $('li a', this.element).each((i, tab) => {\r\n        $(tab).parent().addClass('tab');\r\n        hrefs.push($(tab).attr('href'));\r\n        tab.removeEventListener('click', this.fireTabSelectedEvent);\r\n        tab.addEventListener('click', this.fireTabSelectedEvent);\r\n      });\r\n      $(hrefs).each((i, tab) => {\r\n        if (this.selectedTab.index !== i) {\r\n          $(tab).hide();\r\n        }\r\n      });\r\n      this.taskQueue.queueTask(() => {\r\n        // window resize adjusts Materialize tab indicator\r\n        $(window).trigger('resize');\r\n      });\r\n    });\r\n  }\r\n\r\n  fixedChanged(newValue) {\r\n    if (newValue) {\r\n      this.attributeManager.addClasses('tabs-fixed-width');\r\n    } else {\r\n      this.attributeManager.removeClasses('tabs-fixed-width');\r\n    }\r\n  }\r\n\r\n  transparentChanged(newValue) {\r\n    if (newValue) {\r\n      this.attributeManager.addClasses('tabs-transparent');\r\n    } else {\r\n      this.attributeManager.removeClasses('tabs-transparent');\r\n    }\r\n  }\r\n\r\n  fireTabSelectedEvent(e) {\r\n    let href = e.target.getAttribute('href');\r\n    fireMaterializeEvent(this.element, 'selected', href);\r\n  }\r\n\r\n  selectTab(id) {\r\n    $(this.element).tabs('select_tab', id);\r\n    this.fireTabSelectedEvent({\r\n      target: { getAttribute: () => `#${id}` }\r\n    });\r\n  }\r\n\r\n  // FIXME: probably bad - binding this introduces dirty checking\r\n  get selectedTab() {\r\n    let children = this.element.querySelectorAll('li.tab a');\r\n    let index = -1;\r\n    let href = null;\r\n    [].forEach.call(children, (a, i) => {\r\n      if (a.classList.contains('active')) {\r\n        index = i;\r\n        href = a.href;\r\n        return;\r\n      }\r\n    });\r\n    return { href, index };\r\n  }\r\n}\r\n"]}