{"version":3,"sources":["collapsible/collapsible.js"],"names":["bindable","customAttribute","inject","getBooleanFromAttributeValue","AttributeManager","MdCollapsible","name","defaultValue","Element","element","attributeManager","attached","addClasses","popout","refresh","detached","removeClasses","removeAttributes","$","collapsible","accordion","dataCollapsibleAttributeValue","addAttributes","onOpen","buildCollapsibleOpenCloseCallbackHandler","onClose","accordionChanged","handler","targetElementJquery","targetElement","open","index","close"],"mappings":";;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACAC,sB,2BAAAA,gB;;;+BAQIC,a,WANZJ,gBAAgB,gBAAhB,C,UACAD,SAAS,EAAEM,MAAM,WAAR,EAAqBC,cAAc,KAAnC,EAAT,C,UACAP,SAAS,EAAEM,MAAM,QAAR,EAAkBC,cAAc,KAAhC,EAAT,C,UACAP,SAAS,EAAEM,MAAM,QAAR,EAAT,C,UACAN,SAAS,EAAEM,MAAM,SAAR,EAAT,C,UACAJ,OAAOM,OAAP,C;AAEC,+BAAYC,OAAZ,EAAqB;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,gBAAL,GAAwB,IAAIN,gBAAJ,CAAqB,KAAKK,OAA1B,CAAxB;AACD;;gCAEDE,Q,uBAAW;AACT,eAAKD,gBAAL,CAAsBE,UAAtB,CAAiC,aAAjC;AACA,cAAIT,6BAA6B,KAAKU,MAAlC,CAAJ,EAA+C;AAC7C,iBAAKH,gBAAL,CAAsBE,UAAtB,CAAiC,QAAjC;AACD;AACD,eAAKE,OAAL;AACD,S;;gCAEDC,Q,uBAAW;AACT,eAAKL,gBAAL,CAAsBM,aAAtB,CAAoC,CAAC,aAAD,EAAgB,QAAhB,CAApC;AACA,eAAKN,gBAAL,CAAsBO,gBAAtB,CAAuC,CAAC,kBAAD,CAAvC;AACAC,YAAE,KAAKT,OAAP,EAAgBU,WAAhB,CAA4B,SAA5B;AACD,S;;gCAEDL,O,sBAAU;AACR,cAAIM,YAAYjB,6BAA6B,KAAKiB,SAAlC,CAAhB;AACA,cAAIC,gCAAgCD,YAAY,WAAZ,GAA0B,YAA9D;;AAEA,eAAKV,gBAAL,CAAsBY,aAAtB,CAAoC,EAAE,oBAAoBD,6BAAtB,EAApC;;AAEAH,YAAE,KAAKT,OAAP,EAAgBU,WAAhB,CAA4B;AAC1BC,gCAD0B;AAE1BG,oBAAQ,KAAKC,wCAAL,CAA8C,KAAKD,MAAnD,CAFkB;AAG1BE,qBAAS,KAAKD,wCAAL,CAA8C,KAAKC,OAAnD;AAHiB,WAA5B;AAKD,S;;gCAEDC,gB,+BAAmB;AACjB,eAAKZ,OAAL;AACD,S;;gCAEDU,wC,qDAAyCG,O,EAAS;AAChD,iBAAO,OAAOA,OAAP,KAAoB,UAApB,GACN,UAACC,mBAAD,EAAyB;AACvB,gBAAIC,gBAAgBD,oBAAoB,CAApB,CAApB;;AAEAD,oBAAQE,aAAR;AACD,WALK,GAKF,IALL;AAMD,S;;gCAEDC,I,mBAAgB;AAAA,cAAXC,KAAW,uEAAH,CAAG;;AACdb,YAAE,KAAKT,OAAP,EAAgBU,WAAhB,CAA4B,MAA5B,EAAoCY,KAApC;AACD,S;;gCAEDC,K,oBAAiB;AAAA,cAAXD,KAAW,uEAAH,CAAG;;AACfb,YAAE,KAAKT,OAAP,EAAgBU,WAAhB,CAA4B,OAA5B,EAAqCY,KAArC;AACD,S","file":"../../../collapsible/collapsible.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { AttributeManager } from '../common/attributeManager';\n\n@customAttribute('md-collapsible')\n@bindable({ name: 'accordion', defaultValue: false })\n@bindable({ name: 'popout', defaultValue: false })\n@bindable({ name: 'onOpen' })\n@bindable({ name: 'onClose' })\n@inject(Element)\nexport class MdCollapsible {\n  constructor(element) {\n    this.element = element;\n    this.attributeManager = new AttributeManager(this.element);\n  }\n\n  attached() {\n    this.attributeManager.addClasses('collapsible');\n    if (getBooleanFromAttributeValue(this.popout)) {\n      this.attributeManager.addClasses('popout');\n    }\n    this.refresh();\n  }\n\n  detached() {\n    this.attributeManager.removeClasses(['collapsible', 'popout']);\n    this.attributeManager.removeAttributes(['data-collapsible']);\n    $(this.element).collapsible('destroy');\n  }\n\n  refresh() {\n    let accordion = getBooleanFromAttributeValue(this.accordion);\n    let dataCollapsibleAttributeValue = accordion ? 'accordion' : 'expandable';\n\n    this.attributeManager.addAttributes({ 'data-collapsible': dataCollapsibleAttributeValue });\n\n    $(this.element).collapsible({\n      accordion,\n      onOpen: this.buildCollapsibleOpenCloseCallbackHandler(this.onOpen),\n      onClose: this.buildCollapsibleOpenCloseCallbackHandler(this.onClose)\n    });\n  }\n\n  accordionChanged() {\n    this.refresh();\n  }\n\n  buildCollapsibleOpenCloseCallbackHandler(handler) {\n    return typeof(handler) === 'function' ?\n     (targetElementJquery) => {\n       let targetElement = targetElementJquery[0];\n\n       handler(targetElement);\n     } : null;\n  }\n\n  open(index = 0) {\n    $(this.element).collapsible('open', index);\n  }\n\n  close(index = 0) {\n    $(this.element).collapsible('close', index);\n  }\n}\n"]}