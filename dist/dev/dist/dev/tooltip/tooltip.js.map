{"version":3,"sources":["tooltip/tooltip.js"],"names":["bindable","customAttribute","inject","AttributeManager","getBooleanFromAttributeValue","MdTooltip","Element","element","attributeManager","bind","html","attached","addClasses","addAttributes","position","text","initTooltip","detached","$","tooltip","removeClasses","removeAttributes","textChanged","delay","parseInt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;;2BAIIC,S,WAFZJ,gBAAgB,YAAhB,C,UACAC,OAAOI,OAAP,C,UAEEN,U,UACAA,U,UACAA,U,UACAA,U;AAED,2BAAYO,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,gBAAL,GAAwB,IAAIL,gBAAJ,CAAqB,KAAKI,OAA1B,CAAxB;AACD;;4BAEDE,I,mBAAO;AACL,eAAKC,IAAL,GAAYN,6BAA6B,KAAKM,IAAlC,CAAZ;AACD,S;;4BAEDC,Q,uBAAW;AACT,eAAKH,gBAAL,CAAsBI,UAAtB,CAAiC,YAAjC;AACA,eAAKJ,gBAAL,CAAsBK,aAAtB,CAAoC,EAAE,iBAAiB,KAAKC,QAAxB,EAAkC,gBAAgB,KAAKC,IAAvD,EAApC;AACA,eAAKC,WAAL;AACD,S;;4BAEDC,Q,uBAAW;AACTC,YAAE,KAAKX,OAAP,EAAgBY,OAAhB,CAAwB,QAAxB;AACA,eAAKX,gBAAL,CAAsBY,aAAtB,CAAoC,YAApC;AACA,eAAKZ,gBAAL,CAAsBa,gBAAtB,CAAuC,CAAC,eAAD,EAAkB,cAAlB,CAAvC;AACD,S;;4BAEDC,W,0BAAc;AACZ,eAAKd,gBAAL,CAAsBK,aAAtB,CAAoC,EAAE,gBAAgB,KAAKE,IAAvB,EAApC;AACA,eAAKC,WAAL;AACD,S;;4BAEDA,W,0BAAc;AACZE,YAAE,KAAKX,OAAP,EAAgBY,OAAhB,CAAwB,QAAxB;AACAD,YAAE,KAAKX,OAAP,EAAgBY,OAAhB,CAAwB;AACtBI,mBAAOC,SAAS,KAAKD,KAAd,EAAqB,EAArB,CADe;AAEtBb,kBAAM,KAAKA;AAFW,WAAxB;AAID,S;;;;;;iBArCsB,Q;;;;;iBACH,E;;;;;iBACD,K;;;;;iBACA,E","file":"../../../tooltip/tooltip.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customAttribute('md-tooltip')\n@inject(Element)\nexport class MdTooltip {\n  @bindable() position = 'bottom';\n  @bindable() delay = 50;\n  @bindable() html = false;\n  @bindable() text = '';\n\n  constructor(element) {\n    this.element = element;\n    this.attributeManager = new AttributeManager(this.element);\n  }\n\n  bind() {\n    this.html = getBooleanFromAttributeValue(this.html);\n  }\n\n  attached() {\n    this.attributeManager.addClasses('tooltipped');\n    this.attributeManager.addAttributes({ 'data-position': this.position, 'data-tooltip': this.text });\n    this.initTooltip();\n  }\n\n  detached() {\n    $(this.element).tooltip('remove');\n    this.attributeManager.removeClasses('tooltipped');\n    this.attributeManager.removeAttributes(['data-position', 'data-tooltip']);\n  }\n\n  textChanged() {\n    this.attributeManager.addAttributes({ 'data-tooltip': this.text });\n    this.initTooltip();\n  }\n\n  initTooltip() {\n    $(this.element).tooltip('remove');\n    $(this.element).tooltip({\n      delay: parseInt(this.delay, 10),\n      html: this.html\n    });\n  }\n}\n"]}