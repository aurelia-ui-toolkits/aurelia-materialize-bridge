{"version":3,"sources":["navbar/navbar.js"],"names":["bindable","customElement","bindingMode","inject","getBooleanFromAttributeValue","AttributeManager","MdNavbar","Element","defaultBindingMode","oneTime","element","attached","fixedAttributeManager","fixedAnchor","navAttributeManager","nav","mdFixed","addClasses","mdAutoHeight","mdExtended","detached","removeClasses"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACAC,sB,2BAAAA,gB;;;0BAIIC,Q,WAFZL,cAAc,WAAd,C,UACAE,OAAOI,OAAP,C,UAEEP,SAAS;AACRQ,4BAAoBN,YAAYO;AADxB,OAAT,C,UAGAT,SAAS;AACRQ,4BAAoBN,YAAYO;AADxB,OAAT,C,UAGAT,SAAS;AACRQ,4BAAoBN,YAAYO;AADxB,OAAT,C;AAKD,0BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACD;;2BAEDC,Q,uBAAW;AACT,eAAKC,qBAAL,GAA6B,IAAIP,gBAAJ,CAAqB,KAAKQ,WAA1B,CAA7B;AACA,eAAKC,mBAAL,GAA2B,IAAIT,gBAAJ,CAAqB,KAAKU,GAA1B,CAA3B;AACA,cAAIX,6BAA6B,KAAKY,OAAlC,CAAJ,EAAgD;AAC9C,iBAAKJ,qBAAL,CAA2BK,UAA3B,CAAsC,cAAtC;AACD;AACD,cAAIb,6BAA6B,KAAKc,YAAlC,CAAJ,EAAqD;AACnD,iBAAKJ,mBAAL,CAAyBG,UAAzB,CAAoC,gBAApC;AACD;AACD,cAAIb,6BAA6B,KAAKe,UAAlC,CAAJ,EAAmD;AACjD,iBAAKL,mBAAL,CAAyBG,UAAzB,CAAoC,cAApC;AACD;AACF,S;;2BAEDG,Q,uBAAW;AACT,cAAIhB,6BAA6B,KAAKY,OAAlC,CAAJ,EAAgD;AAC9C,iBAAKJ,qBAAL,CAA2BS,aAA3B,CAAyC,cAAzC;AACD;AACD,cAAIjB,6BAA6B,KAAKc,YAAlC,CAAJ,EAAqD;AACnD,iBAAKJ,mBAAL,CAAyBO,aAAzB,CAAuC,gBAAvC;AACD;AACD,cAAIjB,6BAA6B,KAAKe,UAAlC,CAAJ,EAAmD;AACjD,iBAAKL,mBAAL,CAAyBO,aAAzB,CAAuC,cAAvC;AACD;AACF,S","file":"../../../navbar/navbar.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport { AttributeManager } from '../common/attributeManager';\r\n\r\n@customElement('md-navbar')\r\n@inject(Element)\r\nexport class MdNavbar {\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdExtended;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdFixed;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdAutoHeight;\r\n  fixedAttributeManager;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    this.fixedAttributeManager = new AttributeManager(this.fixedAnchor);\r\n    this.navAttributeManager = new AttributeManager(this.nav);\r\n    if (getBooleanFromAttributeValue(this.mdFixed)) {\r\n      this.fixedAttributeManager.addClasses('navbar-fixed');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.mdAutoHeight)) {\r\n      this.navAttributeManager.addClasses('md-auto-height');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.mdExtended)) {\r\n      this.navAttributeManager.addClasses('nav-extended');\r\n    }\r\n  }\r\n\r\n  detached() {\r\n    if (getBooleanFromAttributeValue(this.mdFixed)) {\r\n      this.fixedAttributeManager.removeClasses('navbar-fixed');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.mdAutoHeight)) {\r\n      this.navAttributeManager.removeClasses('md-auto-height');\r\n    }\r\n    if (getBooleanFromAttributeValue(this.mdExtended)) {\r\n      this.navAttributeManager.removeClasses('nav-extended');\r\n    }\r\n  }\r\n}\r\n"]}