{"version":3,"sources":["transitions/staggered-list.js"],"names":["bindable","customAttribute","inject","getLogger","MdStaggeredList","Element","element","staggerList","bind","log","attached","addEventListener","ensureOpacity","detached","removeEventListener","Materialize","showStaggeredList","$","ref","items","querySelectorAll","forEach","call","opacity","window","getComputedStyle","item","style"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,Y,+BAAAA,M;;AACAC,e,mBAAAA,S;;;iCAIIC,e,WAFZH,gBAAgB,mBAAhB,C,UACAC,OAAOG,OAAP,C,UAEEL,U;AAED,iCAAYM,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,eAAKC,GAAL,GAAWN,UAAU,mBAAV,CAAX;AACD;;kCAEDO,Q,uBAAW;AACT,eAAKJ,OAAL,CAAaK,gBAAb,CAA8B,OAA9B,EAAuC,KAAKJ,WAA5C;AACA,eAAKK,aAAL;AACD,S;;kCAEDC,Q,uBAAW;AACT,eAAKP,OAAL,CAAaQ,mBAAb,CAAiC,OAAjC,EAA0C,KAAKP,WAA/C;AACD,S;;kCAEDA,W,0BAAc;AACZQ,sBAAYC,iBAAZ,CAA8BC,EAAE,KAAKC,GAAP,CAA9B;AACD,S;;kCAEDN,a,4BAAgB;AACd,cAAIO,QAAQ,KAAKD,GAAL,CAASE,gBAAT,CAA0B,IAA1B,CAAZ;AACA,aAAGC,OAAH,CAAWC,IAAX,CAAgBH,KAAhB,EAAuB,gBAAQ;AAC7B,gBAAII,UAAUC,OAAOC,gBAAP,CAAwBC,IAAxB,EAA8BH,OAA5C;AACA,gBAAIA,YAAY,CAAhB,EAAmB;AACjBG,mBAAKC,KAAL,CAAWJ,OAAX,GAAqB,CAArB;AACD;AACF,WALD;AAMD,S","file":"../../../transitions/staggered-list.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getLogger } from 'aurelia-logging';\n\n@customAttribute('md-staggered-list')\n@inject(Element)\nexport class MdStaggeredList {\n  @bindable() ref;\n\n  constructor(element) {\n    this.element = element;\n    this.staggerList = this.staggerList.bind(this);\n    this.log = getLogger('md-staggered-list');\n  }\n\n  attached() {\n    this.element.addEventListener('click', this.staggerList);\n    this.ensureOpacity();\n  }\n\n  detached() {\n    this.element.removeEventListener('click', this.staggerList);\n  }\n\n  staggerList() {\n    Materialize.showStaggeredList($(this.ref));\n  }\n\n  ensureOpacity() {\n    let items = this.ref.querySelectorAll('li');\n    [].forEach.call(items, item => {\n      let opacity = window.getComputedStyle(item).opacity;\n      if (opacity !== 0) {\n        item.style.opacity = 0;\n      }\n    });\n  }\n}\n"]}