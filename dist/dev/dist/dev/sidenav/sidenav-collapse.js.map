{"version":3,"sources":["sidenav/sidenav-collapse.js"],"names":["bindable","customAttribute","getLogger","inject","getBooleanFromAttributeValue","fireMaterializeEvent","MdSidenavCollapse","Element","element","log","attached","ref","whenAttached","then","closeOnClick","mdFixed","window","innerWidth","mdCloseOnClick","onHide","bind","onShow","setAttribute","controlId","sideNavConfig","edge","mdEdge","menuWidth","parseInt","mdWidth","onClose","onOpen","$","sideNav","detached","show","hide","el"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,e,mBAAAA,S;;AACAC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACAC,0B,iBAAAA,oB;;;mCAIIC,iB,WAFZL,gBAAgB,qBAAhB,C,UACAE,OAAOI,OAAP,C,UAEEP,U;AACD,mCAAYQ,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,GAAL,GAAWP,UAAU,qBAAV,CAAX;AACD;;oCAEDQ,Q,uBAAW;AAAA;;AACT,eAAKC,GAAL,CAASC,YAAT,CAAsBC,IAAtB,CAA2B,YAAM;AAC/B,gBAAMC,eAAe,MAAKH,GAAL,CAASI,OAAT,IAAoBC,OAAOC,UAAP,GAAoB,GAAxC,GAA8C,KAA9C,GAAsDb,6BAA6B,MAAKO,GAAL,CAASO,cAAtC,CAA3E;;AAEA,kBAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,OAAd;AACA,kBAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,OAAd;;AAEA,kBAAKZ,OAAL,CAAac,YAAb,CAA0B,gBAA1B,EAA4C,MAAKX,GAAL,CAASY,SAArD;AACA,gBAAIC,gBAAgB;AAClBC,oBAAM,MAAKd,GAAL,CAASe,MAAT,IAAmB,MADP;AAElBZ,wCAFkB;AAGlBa,yBAAWC,SAAS,MAAKjB,GAAL,CAASkB,OAAlB,EAA2B,EAA3B,CAHO;AAIlBC,uBAAS,MAAKX,MAJI;AAKlBY,sBAAQ,MAAKV;AALK,aAApB;AAOAW,cAAE,MAAKxB,OAAP,EAAgByB,OAAhB,CAAwBT,aAAxB;AACD,WAfD;AAgBD,S;;oCAEDU,Q,uBAAW,CAAG,C;;oCAEdC,I,mBAAO;AACLH,YAAE,KAAKxB,OAAP,EAAgByB,OAAhB,CAAwB,MAAxB;AACD,S;;oCAEDG,I,mBAAO;AACLJ,YAAE,KAAKxB,OAAP,EAAgByB,OAAhB,CAAwB,MAAxB;AACD,S;;oCAEDZ,M,mBAAOgB,E,EAAI;AACThC,+BAAqB,KAAKM,GAAL,CAASH,OAA9B,EAAuC,cAAvC;AACD,S;;oCAEDW,M,mBAAOkB,E,EAAI;AACThC,+BAAqB,KAAKM,GAAL,CAASH,OAA9B,EAAuC,cAAvC;AACD,S","file":"../../../sidenav/sidenav-collapse.js","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { getLogger } from 'aurelia-logging';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { fireMaterializeEvent } from '../common/events';\n\n@customAttribute('md-sidenav-collapse')\n@inject(Element)\nexport class MdSidenavCollapse {\n  @bindable() ref;\n  constructor(element) {\n    this.element = element;\n    this.log = getLogger('md-sidenav-collapse');\n  }\n\n  attached() {\n    this.ref.whenAttached.then(() => {\n      const closeOnClick = this.ref.mdFixed && window.innerWidth > 992 ? false : getBooleanFromAttributeValue(this.ref.mdCloseOnClick);\n\n      this.onHide = this.onHide.bind(this);\n      this.onShow = this.onShow.bind(this);\n\n      this.element.setAttribute('data-activates', this.ref.controlId);\n      let sideNavConfig = {\n        edge: this.ref.mdEdge || 'left',\n        closeOnClick,\n        menuWidth: parseInt(this.ref.mdWidth, 10),\n        onClose: this.onHide,\n        onOpen: this.onShow\n      };\n      $(this.element).sideNav(sideNavConfig);\n    });\n  }\n\n  detached() { }\n\n  show() {\n    $(this.element).sideNav('show');\n  }\n\n  hide() {\n    $(this.element).sideNav('hide');\n  }\n\n  onShow(el) {\n    fireMaterializeEvent(this.ref.element, 'sidenav-show');\n  }\n\n  onHide(el) {\n    fireMaterializeEvent(this.ref.element, 'sidenav-hide');\n  }\n}\n"]}