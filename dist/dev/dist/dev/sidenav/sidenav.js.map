{"version":3,"sources":["sidenav/sidenav.js"],"names":["bindable","customElement","inject","getBooleanFromAttributeValue","AttributeManager","getLogger","MdSidenav","Element","element","controlId","id","log","whenAttached","Promise","resolve","reject","attachedResolver","attached","attributeManager","sidenav","mdFixed","addClasses","mdEdge","detached","removeClasses","mdFixedChanged","newValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,Y,+BAAAA,M;;AACAC,kC,qBAAAA,4B;;AACAC,sB,2BAAAA,gB;;AACAC,e,mBAAAA,S;;;2BAIIC,S,WAFZL,cAAc,YAAd,C,UACAC,OAAOK,OAAP,C,UAGEP,U,UACAA,U,UACAA,U,UACAA,U;AAKD,2BAAYQ,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,SAAL,mBAA+BH,UAAUI,EAAV,EAA/B;AACA,eAAKC,GAAL,GAAWN,UAAU,YAAV,CAAX;AACA,eAAKO,YAAL,GAAoB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnD,kBAAKC,gBAAL,GAAwBF,OAAxB;AACD,WAFmB,CAApB;AAGD;;4BAEDG,Q,uBAAW;AACT,eAAKC,gBAAL,GAAwB,IAAId,gBAAJ,CAAqB,KAAKe,OAA1B,CAAxB;AACA,cAAIhB,6BAA6B,KAAKiB,OAAlC,CAAJ,EAAgD;AAC9C,iBAAKF,gBAAL,CAAsBG,UAAtB,CAAiC,OAAjC;AACA,gBAAI,KAAKC,MAAL,KAAgB,OAApB,EAA6B;AAE3B,mBAAKJ,gBAAL,CAAsBG,UAAtB,CAAiC,eAAjC;AACD;AACF;;AAED,eAAKL,gBAAL;AACD,S;;4BAEDO,Q,uBAAW;AACT,eAAKL,gBAAL,CAAsBM,aAAtB,CAAoC,CAAC,OAAD,EAAU,eAAV,CAApC;AACD,S;;4BAEDC,c,2BAAeC,Q,EAAU;AACvB,cAAI,KAAKR,gBAAT,EAA2B;AACzB,gBAAIf,6BAA6BuB,QAA7B,CAAJ,EAA4C;AAC1C,mBAAKR,gBAAL,CAAsBG,UAAtB,CAAiC,OAAjC;AACD,aAFD,MAEO;AACL,mBAAKH,gBAAL,CAAsBM,aAAtB,CAAoC,OAApC;AACD;AACF;AACF,S;;;mBA3CMd,E,GAAK,C;;;iBACiB,K;;;;;iBACR,M;;;;;iBACC,K;;;;;iBACA,G","file":"../../../sidenav/sidenav.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getLogger } from 'aurelia-logging';\n\n@customElement('md-sidenav')\n@inject(Element)\nexport class MdSidenav {\n  static id = 0;\n  @bindable() mdCloseOnClick = false;\n  @bindable() mdEdge = 'left';\n  @bindable() mdFixed = false;\n  @bindable() mdWidth = 300;\n\n  attachedResolver;\n  whenAttached;\n\n  constructor(element) {\n    this.element = element;\n    this.controlId = `md-sidenav-${MdSidenav.id++}`;\n    this.log = getLogger('md-sidenav');\n    this.whenAttached = new Promise((resolve, reject) => {\n      this.attachedResolver = resolve;\n    });\n  }\n\n  attached() {\n    this.attributeManager = new AttributeManager(this.sidenav);\n    if (getBooleanFromAttributeValue(this.mdFixed)) {\n      this.attributeManager.addClasses('fixed');\n      if (this.mdEdge === 'right') {\n        // see: https://github.com/aurelia-ui-toolkits/aurelia-materialize-bridge/issues/53\n        this.attributeManager.addClasses('right-aligned');\n      }\n    }\n\n    this.attachedResolver();\n  }\n\n  detached() {\n    this.attributeManager.removeClasses(['fixed', 'right-aligned']);\n  }\n\n  mdFixedChanged(newValue) {\n    if (this.attributeManager) {\n      if (getBooleanFromAttributeValue(newValue)) {\n        this.attributeManager.addClasses('fixed');\n      } else {\n        this.attributeManager.removeClasses('fixed');\n      }\n    }\n  }\n}\n"]}