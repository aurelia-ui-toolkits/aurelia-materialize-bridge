{"version":3,"sources":["common/events.js"],"names":["fireEvent","element","name","data","event","CustomEvent","detail","bubbles","dispatchEvent","fireMaterializeEvent","constants","eventPrefix"],"mappings":";;;;AAQO,WAASA,SAAT,CAAmBC,OAAnB,EAAqCC,IAArC,EAA+D;AAAA,QAAZC,IAAY,uEAAJ,EAAI;;AACpE,QAAIC,QAAQ,IAAIC,WAAJ,CAAgBH,IAAhB,EAAsB;AAChCI,cAAQH,IADwB;AAEhCI,eAAS;AAFuB,KAAtB,CAAZ;AAIAN,YAAQO,aAAR,CAAsBJ,KAAtB;;AAEA,WAAOA,KAAP;AACD;;uBAReJ,S;;AAgBT,WAASS,oBAAT,CAA8BR,OAA9B,EAAgDC,IAAhD,EAA0E;AAAA,QAAZC,IAAY,uEAAJ,EAAI;;AAC/E,WAAOH,UAAUC,OAAV,OAAsBS,UAAUC,WAAhC,GAA8CT,IAA9C,EAAsDC,IAAtD,CAAP;AACD;;kCAFeM,oB;;;;AAxBRC,e,cAAAA,S","file":"../../../common/events.js","sourcesContent":["import {constants} from './constants';\n\n/**\n* Fire DOM event on an element\n* @param element The Element which the DOM event will be fired on\n* @param name The Event's name\n* @param data Addition data to attach to an event\n*/\nexport function fireEvent(element: Element, name: string, data? = {}) {\n  let event = new CustomEvent(name, {\n    detail: data,\n    bubbles: true\n  });\n  element.dispatchEvent(event);\n\n  return event;\n}\n\n/**\n* Fire DOM event on an element with the md-on prefix\n* @param element The Element which the DOM event will be fired on\n* @param name The Event's name, without md-on prefix\n* @param data Addition data to attach to an event\n*/\nexport function fireMaterializeEvent(element: Element, name: string, data? = {}) {\n  return fireEvent(element, `${constants.eventPrefix}${name}`, data);\n}\n"]}